image:

  # image.repository -- Docker registry/repository to pull the image from
  repository: ccrisan/motioneye

  # image.tag -- Version/Arch of Docker image to use. Change to `0.42-armhf` for RaspberyPi.
  tag: 0.42-amd64

  # image.pullPolicy -- Docker image pull policy
  pullPolicy: IfNotPresent

# image.pullSecrets -- Secrets to use when pulling Docker images
imagePullSecrets: []

# nameOverride -- Set to overrides the name of resources
nameOverride: ""

# fullnameOverride -- Set to override the Full Name of resources
fullnameOverride: ""

persistence:

  config:

    # persistence.config.enabled -- Enables persistence for the config directory
    enabled: false

    # persistence.config.existingClaim -- Set to use an existing PVC instead of creating a new one.
    existingClaim:
    
    # persistence.config.storageClass -- (Optional) StorageClass to use for the PVC
    # storageClass: "-"
    
    # persistence.config.accessMode -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
    accessMode: ReadWriteOnce
    
    # persistence.config.size -- size/capacity of the PVC
    size: 8Gi

    # persistence.config.annotations -- (Optional) annotations to add to the PVC
    annotations: {}

  data:

    # persistence.data.enabled -- Enables persistence for the data directory
    enabled: false

    # persistence.data.existingClaim -- Set to use an existing PVC instead of creating a new one.
    existingClaim:
    
    # persistence.data.storageClass -- (Optional) StorageClass to use for the PVC
    # storageClass: "-"
    
    # persistence.data.accessMode -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
    accessMode: ReadWriteOnce
    
    # persistence.data.size -- size/capacity of the PVC
    size: 24Gi

    # persistence.data.annotations -- (Optional) annotations to add to the PVC
    annotations: {}

serviceAccount:
  
  # serviceAccount.create -- Specifies whether a service account should be created
  create: false
  
  # serviceAccount.name -- (string) name of the service account to use. If not set and create is true, a name is generated using the fullname template
  # name:

service:

  # service.type -- Type of Service to use
  type: ClusterIP

  # service.port -- Port the Service should communicate on
  port: 80

ingress:
  # ingress.enabled -- Enables the use of an Ingress Controller to front the Service and provide HTTPS
  enabled: false
  
  # ingress.annotations -- annotations to configure your Ingress. See your Ingress Controller's Docs for more info.
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  
  # ingress.hosts -- list of hosts and their paths that ingress controller should repsond to.
  hosts:
    - host: chart-example.local
      paths: []
  
  # ingress.tls -- list of TLS configurations
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Add container environment variables
env: []
  # TZ: America/Chicago

additionalVolumes: []
  # - name: "motioneye-pvc"
  #   persistentVolumeClaim:
  #     claimName: "motioneye-pvc"
additionalVolumeMounts: []
  # - name: motioneye-pvc
  #   mountPath: "/motioneye-media"
  #   subPath: "motioneye/etc/"

# resources -- Set resource limits/requests for the Pod(s)
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# nodeSelector -- Node Selector configuration
nodeSelector: {}

# tolerations -- Node toleration configuration
tolerations: []

# affinity -- Set Pod affinity rules
affinity: {}

# podSecurityContext -- Set Pod security contexts
podSecurityContext: {}
  # fsGroup: 2000

# securityContext -- Set Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000